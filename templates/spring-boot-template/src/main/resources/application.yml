# Spring Boot 应用配置文件

spring:
  # 应用基本信息
  application:
    name: spring-boot-template
  
  # 开发环境配置
  profiles:
    active: dev
  
  # 数据源配置
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  
  # JPA配置
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.H2Dialect
  
  # H2数据库控制台
  h2:
    console:
      enabled: true
      path: /h2-console
  
  # Jackson JSON配置
  jackson:
    property-naming-strategy: SNAKE_CASE
    default-property-inclusion: NON_NULL
    time-zone: Asia/Shanghai
    date-format: yyyy-MM-dd HH:mm:ss

# 服务器配置
server:
  port: 8080
  servlet:
    context-path: /api
    encoding:
      charset: UTF-8
      enabled: true

# 日志配置
logging:
  level:
    com.example: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Actuator监控端点
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  info:
    env:
      enabled: true

# 应用信息
info:
  app:
    name: ${spring.application.name}
    description: Spring Boot 项目模板
    version: 1.0.0
    encoding: UTF-8
    java:
      version: ${java.version}

---
# 开发环境配置
spring:
  profiles: dev
  
  datasource:
    url: jdbc:h2:mem:devdb
    
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true

logging:
  level:
    root: INFO
    com.example: DEBUG

---
# 测试环境配置  
spring:
  profiles: test
  
  datasource:
    url: jdbc:h2:mem:testdb
    
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false

---
# 生产环境配置
spring:
  profiles: prod
  
  datasource:
    url: jdbc:postgresql://localhost:5432/proddb
    username: ${DB_USERNAME:user}
    password: ${DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
    
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    
logging:
  level:
    root: WARN
    com.example: INFO
  file:
    name: application.log

server:
  port: ${PORT:8080}